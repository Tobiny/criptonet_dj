# Generated by Django 3.2.6 on 2022-11-06 22:17

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields
import djmoney.models.validators


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0008_auto_20221105_1832'),
    ]

    operations = [
        migrations.DeleteModel(
            name='Mantenimiento',
        ),
        migrations.RemoveField(
            model_name='producto',
            name='precio',
        ),
        migrations.RemoveField(
            model_name='producto',
            name='precio_currency',
        ),
        migrations.AddField(
            model_name='detalleproducto',
            name='preciototal',
            field=djmoney.models.fields.MoneyField(decimal_places=3, default=Decimal('0'), default_currency='MXN', max_digits=27, max_length=30),
        ),
        migrations.AddField(
            model_name='detalleproducto',
            name='preciototal_currency',
            field=djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('MXN', 'MXN $'), ('USD', 'USD $')], default='MXN', editable=False, max_length=3),
        ),
        migrations.AddField(
            model_name='mantenimientos',
            name='cliente',
            field=models.ForeignKey(help_text='Seleccione el cliente para su mantenimiento', on_delete=django.db.models.deletion.CASCADE, to='app.client', verbose_name='Cliente'),
        ),
        migrations.AddField(
            model_name='mantenimientos',
            name='empleado',
            field=models.ForeignKey(help_text='Seleccione el empleado a realizar el mantenimiento', on_delete=django.db.models.deletion.CASCADE, to='app.empleado', verbose_name='Empleado'),
        ),
        migrations.AddField(
            model_name='producto',
            name='precioCompra',
            field=djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), default_currency='MXN', help_text='Ingrese el precio del producto', max_digits=9, max_length=9, validators=[djmoney.models.validators.MinMoneyValidator(0), djmoney.models.validators.MaxMoneyValidator(999999), django.core.validators.RegexValidator('[0-9]{1,6}([.][0-9]{1,2})?', message='Cantidad de dígitos superada')], verbose_name='Precio del Producto'),
        ),
        migrations.AddField(
            model_name='producto',
            name='precioCompra_currency',
            field=djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('MXN', 'MXN $'), ('USD', 'USD $')], default='MXN', editable=False, max_length=3),
        ),
        migrations.AddField(
            model_name='producto',
            name='precioVenta',
            field=djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), default_currency='MXN', help_text='Ingrese el precio del producto', max_digits=9, max_length=9, validators=[djmoney.models.validators.MinMoneyValidator(0), djmoney.models.validators.MaxMoneyValidator(999999), django.core.validators.RegexValidator('[0-9]{1,6}([.][0-9]{1,2})?', message='Cantidad de dígitos superada')], verbose_name='Precio del Producto'),
        ),
        migrations.AddField(
            model_name='producto',
            name='precioVenta_currency',
            field=djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('MXN', 'MXN $'), ('USD', 'USD $')], default='MXN', editable=False, max_length=3),
        ),
        migrations.AlterField(
            model_name='client',
            name='codigoPostal',
            field=models.IntegerField(default=49000, help_text='Ingrese el codigo postal del cliente', max_length=5, validators=[django.core.validators.RegexValidator(code='invalid_PC', message='Código postal inválido', regex='\\d{5}')], verbose_name='Codigo Postal del Cliente'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='client',
            name='dirEmail',
            field=models.EmailField(default=1, help_text='Ingrese la dirección de correo del cliente', max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_email', message='El correo es inválido.', regex='[a-z0-9]+@[a-z]+\\.[a-z]{2,3}')], verbose_name='Email del Cliente'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='client',
            name='domicilio',
            field=models.CharField(default=1, help_text='Ingrese el domicilio del cliente', max_length=50, verbose_name='Domicilio del Cliente'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='client',
            name='estado',
            field=models.CharField(choices=[("Aguascalientes'", 'Aguascalientes'), ('Baja California', 'Baja California'), ('Baja California Sur', 'Baja California Sur'), ('Campeche', 'Campeche'), ('Chiapas', 'Chiapas'), ('Chihuahua', 'Chihuahua'), ('Ciudad de México', 'Ciudad de México'), ('Coahuila', 'Coahuila'), ('Colima', 'Colima'), ('Durango', 'Durango'), ('Guanajuato', 'Guanajuato'), ('Guerrero', 'Guerrero'), ('Hidalgo', 'Hidalgo'), ('Jalisco', 'Jalisco'), ('México', 'México'), ('Michoacán', 'Michoacán'), ('Morelos', 'Morelos'), ('Nayarit', 'Nayarit'), ('Nuevo León', 'Nuevo León'), ('Oaxaca', 'Oaxaca'), ('Puebla', 'Puebla'), ('Querétaro', 'Querétaro'), ('Quintana Roo', 'Quintana Roo'), ('San Luis Potosí', 'San Luis Potosí'), ('Sinaloa', 'Sinaloa'), ('Sonora', 'Sonora'), ('Tabasco', 'Tabasco'), ('Tamaulipas', 'Tamaulipas'), ('Tlaxcala', 'Tlaxcala'), ('Veracruz', 'Veracruz'), ('Yucatán', 'Yucatán'), ('Zacatecas', 'Zacatecas')], default='Jalisco', help_text='Ingrese el estado', max_length=20, verbose_name='Estado'),
        ),
        migrations.AlterField(
            model_name='client',
            name='nombreCliente',
            field=models.CharField(default=1, help_text='Ingrese el nombre del cliente', max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_nombre', message='El nombre ingresado no es válido, revise sus espacios o sintaxis', regex='^[ÁÉÍÓÚA-Z][a-záéíóú]*(\\s[ÁÉÍÓÚA-Z][a-záéíóú]*)*')], verbose_name='Nombre del Cliente'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='client',
            name='numTelefono',
            field=models.CharField(default=1, help_text='Ingrese el número de teléfono del cliente', max_length=10, validators=[django.core.validators.RegexValidator(code='invalid_number', message='El número es inválido.', regex='(\\(\\d{3}\\)[.-]?|\\d{3}[.-]?)?\\d{3}[.-]?\\d{4}')], verbose_name='Número de Teléfono'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='client',
            name='rfcCliente',
            field=models.CharField(default=1, max_length=13, validators=[django.core.validators.RegexValidator(code='invalid_RFC', message='El RFC deberá tener el formato que la Servicio de Administración Tributaria valida', regex='^([A-ZÑ&]{3,4}) ?(?:- ?)?(\\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\\d|3[01])) ?(?:- ?)?([A-Z\\d]{2})([A\\d])$')]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='detalleproducto',
            name='subtotal',
            field=djmoney.models.fields.MoneyField(decimal_places=3, default=Decimal('0'), default_currency='MXN', max_digits=27, max_length=30),
        ),
        migrations.AlterField(
            model_name='producto',
            name='cantidad',
            field=models.IntegerField(blank=True, default=0, help_text='Ingrese la cantidad de productos en existencia/añadir', max_length=6, null=True, verbose_name='Cantidad de Productos en Existencia'),
        ),
        migrations.AlterField(
            model_name='producto',
            name='descripcion',
            field=models.TextField(default=1, help_text='Ingrese la descripción del producto', max_length=250, verbose_name='Descripción del producto'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='producto',
            name='modelo',
            field=models.CharField(default=1, help_text='Ingrese el modelo del producto', max_length=70, verbose_name='Modelo del producto'),
            preserve_default=False,
        ),
    ]
