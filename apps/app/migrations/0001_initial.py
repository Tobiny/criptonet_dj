# Generated by Django 3.2.6 on 2021-12-08 00:17

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djmoney.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreCliente', models.CharField(blank=True, max_length=200, null=True)),
                ('domicilio', models.CharField(blank=True, max_length=200, null=True)),
                ('estado', models.CharField(blank=True, choices=[("Aguascalientes'", 'Aguascalientes'), ('Baja California', 'Baja California'), ('Baja California Sur', 'Baja California Sur'), ('Campeche', 'Campeche'), ('Chiapas', 'Chiapas'), ('Chihuahua', 'Chihuahua'), ('Ciudad de México', 'Ciudad de México'), ('Coahuila', 'Coahuila'), ('Colima', 'Colima'), ('Durango', 'Durango'), ('Guanajuato', 'Guanajuato'), ('Guerrero', 'Guerrero'), ('Hidalgo', 'Hidalgo'), ('Jalisco', 'Jalisco'), ('México', 'México'), ('Michoacán', 'Michoacán'), ('Morelos', 'Morelos'), ('Nayarit', 'Nayarit'), ('Nuevo León', 'Nuevo León'), ('Oaxaca', 'Oaxaca'), ('Puebla', 'Puebla'), ('Querétaro', 'Querétaro'), ('Quintana Roo', 'Quintana Roo'), ('San Luis Potosí', 'San Luis Potosí'), ('Sinaloa', 'Sinaloa'), ('Sonora', 'Sonora'), ('Tabasco', 'Tabasco'), ('Tamaulipas', 'Tamaulipas'), ('Tlaxcala', 'Tlaxcala'), ('Veracruz', 'Veracruz'), ('Yucatán', 'Yucatán'), ('Zacatecas', 'Zacatecas')], default='Jalisco', max_length=100)),
                ('codigoPostal', models.CharField(blank=True, max_length=10, null=True)),
                ('numTelefono', models.CharField(blank=True, max_length=100, null=True)),
                ('dirEmail', models.CharField(blank=True, max_length=100, null=True)),
                ('rfcCliente', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(code='invalid_RFC2', message='El RFC deberá tener el formato que la Servicio de Administración Tributaria valida', regex='^([A-ZÑ&]{3,4}([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1]))((-)?([A-Z\\d]{3}))?$')])),
                ('uniqueId', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True, unique=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('id_empleado', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Empleado')),
                ('nombre', models.CharField(help_text='Ingrese el nombre del empleado', max_length=50, verbose_name='Nombre del Empleado')),
                ('rfc', models.CharField(help_text='12-13 caracteres <a href="https://www.sat.gob.mx/consultas/44083 /consulta-tu-informacion-fiscal "> consulta tu RFC</a>', max_length=13, validators=[django.core.validators.RegexValidator(code='invalid_RFC', message='El RFC deberá tener el formato que la Servicio de Administración Tributaria valida', regex='^([A-ZÑ&]{3,4}([0-9]{2})(0[1-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1]))((-)?([A-Z\\d]{3}))?$')], verbose_name='RFC')),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id_marca', models.CharField(help_text='Ingrese la id la marca (p, ej. NVD, AMD,etc.)', max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(code='invalid_id_marca', message='La id debe ser de 3 dígitos y debe tener solo letras mayúsculas y números', regex='^([A-Z0-9]){3}')], verbose_name='ID Marca')),
                ('nombre', models.CharField(help_text='Ingrese la marca (p. ej. AMD,Nvidia, etc)', max_length=200, verbose_name='Nombre de Marca')),
            ],
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id_servicio', models.AutoField(primary_key=True, serialize=False, verbose_name='ID de Servicio')),
                ('precio_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('MXN', 'MXN $'), ('USD', 'USD $')], default='MXN', editable=False, max_length=3)),
                ('precio', djmoney.models.fields.MoneyField(decimal_places=2, default_currency='MXN', help_text='Ingrese el costo del servicio', max_digits=16, max_length=18, verbose_name='Precio del Servicio')),
                ('nombre', models.CharField(help_text='Ingrese el nombre del servicio.', max_length=30, verbose_name='Nombre del Servicio')),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clientName', models.CharField(blank=True, max_length=200, null=True)),
                ('addressLine1', models.CharField(blank=True, max_length=200, null=True)),
                ('province', models.CharField(blank=True, choices=[("Aguascalientes'", 'Aguascalientes'), ('Baja California', 'Baja California'), ('Baja California Sur', 'Baja California Sur'), ('Campeche', 'Campeche'), ('Chiapas', 'Chiapas'), ('Chihuahua', 'Chihuahua'), ('Ciudad de México', 'Ciudad de México'), ('Coahuila', 'Coahuila'), ('Colima', 'Colima'), ('Durango', 'Durango'), ('Guanajuato', 'Guanajuato'), ('Guerrero', 'Guerrero'), ('Hidalgo', 'Hidalgo'), ('Jalisco', 'Jalisco'), ('México', 'México'), ('Michoacán', 'Michoacán'), ('Morelos', 'Morelos'), ('Nayarit', 'Nayarit'), ('Nuevo León', 'Nuevo León'), ('Oaxaca', 'Oaxaca'), ('Puebla', 'Puebla'), ('Querétaro', 'Querétaro'), ('Quintana Roo', 'Quintana Roo'), ('San Luis Potosí', 'San Luis Potosí'), ('Sinaloa', 'Sinaloa'), ('Sonora', 'Sonora'), ('Tabasco', 'Tabasco'), ('Tamaulipas', 'Tamaulipas'), ('Tlaxcala', 'Tlaxcala'), ('Veracruz', 'Veracruz'), ('Yucatán', 'Yucatán'), ('Zacatecas', 'Zacatecas')], max_length=100)),
                ('postalCode', models.CharField(blank=True, max_length=10, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('emailAddress', models.CharField(blank=True, max_length=100, null=True)),
                ('taxNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('uniqueId', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True, unique=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoProducto',
            fields=[
                ('id_tipo', models.CharField(help_text='Ingrese la id tipo de producto (p, ej. TV, PRO)', max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(code='invalid_id', message='La id debe ser de 3 dígitos y debe tener solo letras mayúsculas y números', regex='^([A-Z0-9]){3}')], verbose_name='ID del Tipo')),
                ('nombre', models.CharField(help_text='Ingrese el tipo de producto (p. ej. Tarjeta de video, Procesador etc.)', max_length=200, verbose_name='Nombre del Tipo')),
            ],
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id_venta', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Venta')),
                ('total_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('MXN', 'MXN $'), ('USD', 'USD $')], default='XYZ', editable=False, max_length=3)),
                ('total', djmoney.models.fields.MoneyField(decimal_places=2, max_digits=16, max_length=18)),
                ('fecha', models.DateField()),
                ('id_cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.cliente')),
                ('id_empleado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.empleado')),
            ],
        ),
        migrations.CreateModel(
            name='Recibo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('numero', models.CharField(blank=True, max_length=100, null=True)),
                ('fechaPago', models.DateField(blank=True, null=True)),
                ('terminosPago', models.CharField(choices=[('14 días', '14 días'), ('30 días', '30 días'), ('60 días', '60 días')], default='14 days', max_length=100)),
                ('estado', models.CharField(choices=[('ACTUAL', 'ACTUAL'), ('NO PAGADO', 'NO PAGADO'), ('PAGADO', 'PAGADO')], default='CURRENT', max_length=100)),
                ('notas', models.TextField(blank=True, null=True)),
                ('uniqueId', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True, unique=True)),
                ('fecha_creacion', models.DateTimeField(blank=True, null=True)),
                ('ultima_actualizacion', models.DateTimeField(blank=True, null=True)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.cliente')),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('cantidad', models.FloatField(blank=True, null=True)),
                ('precio_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('MXN', 'MXN $'), ('USD', 'USD $')], default='MXN', editable=False, max_length=3)),
                ('precio', djmoney.models.fields.MoneyField(decimal_places=3, default_currency='MXN', max_digits=27, max_length=30)),
                ('uniqueId', models.CharField(blank=True, max_length=100, null=True)),
                ('marca', models.ForeignKey(default='Sin marca', on_delete=django.db.models.deletion.CASCADE, to='app.marca')),
                ('tipo_producto', models.ForeignKey(default='Sin tipo', on_delete=django.db.models.deletion.CASCADE, to='app.tipoproducto')),
            ],
        ),
        migrations.CreateModel(
            name='Mantenimiento',
            fields=[
                ('id_manten', models.AutoField(primary_key=True, serialize=False, verbose_name='ID del Mantenimiento')),
                ('cantidad_servicios', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad de servicios')),
                ('fecha', models.DateField(verbose_name='Fecha del Mantenimiento')),
                ('observaciones', models.TextField(help_text='Ingrese las observaciones del mantenimiento', verbose_name='Observaciones')),
                ('total_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('MXN', 'MXN $'), ('USD', 'USD $')], default='XYZ', editable=False, max_length=3)),
                ('total', djmoney.models.fields.MoneyField(decimal_places=2, editable=False, max_digits=16, max_length=18, verbose_name='Total')),
                ('id_servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.servicio')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleVenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField()),
                ('subtotal_currency', djmoney.models.fields.CurrencyField(choices=[('EUR', 'EUR €'), ('MXN', 'MXN $'), ('USD', 'USD $')], default='XYZ', editable=False, max_length=3)),
                ('subtotal', djmoney.models.fields.MoneyField(decimal_places=2, max_digits=16, max_length=18)),
                ('id_manten', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.mantenimiento')),
                ('id_venta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.venta')),
                ('productos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.producto')),
            ],
        ),
        migrations.CreateModel(
            name='DetalleProducto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueId', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, max_length=500, null=True, unique=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('producto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.producto')),
                ('recibo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.recibo')),
            ],
        ),
    ]
